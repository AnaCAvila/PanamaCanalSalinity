Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist + Ciri_Grande_flow_dist , data = delayed_df, na.action=na.exclude))$r.squared)
}
x(par = c(31.9594, 0.0001))
o <- optim(par = c(31.9594, 0.0001),x)
x<-function(par)
{
#delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
delayed_df <- delayed_df[complete.cases(delayed_df), ]
return(summary(lm(data ~
Gatun_flow_dist, data = delayed_df, na.action=na.exclude))$r.squared)
}
x(par = c(31.9594, 0.0001))
o <- optim(par = c(31.9594, 0.0001),x)
x<-function(par)
{
#delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
delayed_df <- delayed_df[complete.cases(delayed_df), ]
return(summary(lm(Ciri_Grande_flow_dist ~
Gatun_flow_dist, data = delayed_df, na.action=na.exclude))$r.squared)
}
x(par = c(31.9594, 0.0001))
o <- optim(par = c(31.9594, 0.0001),x)
o <- optim((31.9594, 0.0001),x)
delayed_df = apply(delayed_df, 1, function(row) all(row !=0 ))
x<-function(par)
{
#delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
delayed_df <- delayed_df[complete.cases(delayed_df), ]
delayed_df = apply(delayed_df, 1, function(row) all(row !=0 ))
return(summary(lm(Ciri_Grande_flow_dist ~
Gatun_flow_dist, data = delayed_df, na.action=na.exclude))$r.squared)
}
x(par = c(31.9594, 0.0001))
1+1
x<-function(par)
{
#delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
delayed_df <- delayed_df[complete.cases(delayed_df), ]
delayed_df = apply(delayed_df, 1, function(row) all(row !=0 ))
return(summary(lm(Ciri_Grande_flow_dist ~
Gatun_flow_dist, data = delayed_df, na.action=na.exclude))$r.squared)
}
x(par = c(31.9594, 0.0001))
View(delayed_df)
delayed_df = apply(delayed_df, 1, function(row) all(row !=0 ))
delayed_df = apply(delayed_df, 1, function(row) all(row !=0 ))
delayed_df = apply(delayed_df, 1, function(row) all(row !=0 ))
View(delayed_df)
View(delayed_df)
View(df)
delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
View(delayed_df)
delayed_df <- delayed_df[complete.cases(delayed_df), ]
delayed_df <- apply(delayed_df, 1, function(row) all(row !=0 ))
delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
delayed_df <- delayed_df[complete.cases(delayed_df), ]
apply(delayed_df, 1, function(row) all(row !=0 ))
View(delayed_df)
ex <- apply(delayed_df, 1, function(row) all(row !=0 ))
ex
ex <- delayed_df[apply(delayed_df, 1, function(row) all(row !=0 ))]
ex <- ifelse(apply(delayed_df, 1, function(row) all(row !=0 )), delayed_df, NA)
ex
View(df)
delayed_df[delayed_df == 0] <- NA
delayed_df <- delayed_df[complete.cases(delayed_df), ]
View(delayed_df)
x<-function(par)
{
return(summary(lm(data ~ main_traffic, data = delayed_df, na.action=na.exclude))$r.squared)
}
x(par = c(31.9594, 0.0001))
o <- optim(par = c(31.9594, 0.0001),x)
o
x<-function(par)
{
return(summary(lm(data ~ Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist +
Ciri_Grande_flow_dist + main_traffic + neo_traffic, data = delayed_df, na.action=na.exclude))$r.squared)
}
o <- optim(par = c(31.9594, 0.0001),x)
o
lm(data ~ Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist +
Ciri_Grande_flow_dist + main_traffic + neo_traffic, data = delayed_df, na.action=na.exclude)
summary(lm(data ~ Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist +
Ciri_Grande_flow_dist + main_traffic + neo_traffic, data = delayed_df, na.action=na.exclude))
delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
fit <- lm(data ~ Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist +
Ciri_Grande_flow_dist + main_traffic + neo_traffic, data = delayed_df)
summary(fit)
delayed_df <- subset(delayed_df, delayed_df$data != 15)
delayed_df <- subset(delayed_df, delayed_df$data != 4.11)
#outliers
delayed_df <- subset(delayed_df, delayed_df$site != 'TMH')
fit <- lm(data ~ Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist +
Ciri_Grande_flow_dist + main_traffic + neo_traffic, data = delayed_df)
summary(fit)
View(delayed_df)
o <- optim(par = c(31.9594, 0.0001),x)
o
lm(data ~ Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist +
Ciri_Grande_flow_dist + main_traffic + neo_traffic, data = delayed_df, na.action=na.exclude)
x(par = c(31.9594, 0.0001))
o <- optim(par = c(31.9594, 0.0001),x)
x<-function(par)
{
#delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA #removing dates before the beginning of salinity data collection
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
delayed_df[delayed_df == 0] <- NA
delayed_df <- delayed_df[complete.cases(delayed_df), ]
return(summary(lm(Ciri_Grande_flow_dist ~
Gatun_flow_dist, data = delayed_df, na.action=na.exclude))$r.squared)
}
x(par = c(31.9594, 0.0001))
o <- optim(par = c(31.9594, 0.0001),x)
View(delayed_df)
x<-function(par)
{
#delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA #removing dates before the beginning of salinity data collection
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
delayed_df[delayed_df == 0] <- NA
delayed_df <- delayed_df[complete.cases(delayed_df), ]
return(summary(lm(data ~ Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist +
Ciri_Grande_flow_dist + main_traffic + neo_traffic, data = delayed_df, na.action=na.exclude))$r.squared)
}
x(par = c(31.9594, 0.0001))
x<-function(par)
{
#delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA #removing dates before the beginning of salinity data collection
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
delayed_df[delayed_df == 0] <- NA
delayed_df <- delayed_df[complete.cases(delayed_df), ]
return(summary(lm(data ~ Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist +
Ciri_Grande_flow_dist + main_traffic + neo_traffic, data = delayed_df, na.action=na.exclude))$r.squared)
}
x(par = c(31.9594, 0.0001))
o <- optim(par = c(31.9594, 0.0001),x)
View(delayed_df)
x<-function(par)
{
#delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA #removing dates before the beginning of salinity data collection
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
delayed_df[delayed_df == 0] <- NA
delayed_df <- delayed_df[complete.cases(delayed_df), ]
return(delayed_df)
#return(summary(lm(data ~ Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist +
#Ciri_Grande_flow_dist + main_traffic + neo_traffic, data = delayed_df, na.action=na.exclude))$r.squared)
}
x(par = c(31.9594, 0.0001))
o <- optim(par = c(31.9594, 0.0001),x)
o <- optim(par = as.numeric(unlist(31.9594, 0.0001)),x)
x<-function(par)
{
#delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA #removing dates before the beginning of salinity data collection
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
delayed_df[delayed_df == 0] <- NA
delayed_df <- delayed_df[complete.cases(delayed_df), ]
#return(delayed_df)
return(summary(lm(data ~ Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist + Ciri_Grande_flow_dist + main_traffic + neo_traffic, data = delayed_df, na.action=na.exclude))$r.squared)
}
x(par = c(31.9594, 0.0001))
o <- optim(par = c(31.9594, 0.0001)),x)
o <- optim(par = c(31.9594, 0.0001),x)
x<-function(par)
{
#delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA #removing dates before the beginning of salinity data collection
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
delayed_df <- subset(delayed_df, delayed_df$data != 15)
delayed_df <- subset(delayed_df, delayed_df$data != 4.11)
#outliers
delayed_df <- subset(delayed_df, delayed_df$site != 'TMH')
delayed_df[delayed_df == 0] <- NA
delayed_df <- delayed_df[complete.cases(delayed_df), ]
#return(delayed_df)
return(summary(lm(data ~ Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist + Ciri_Grande_flow_dist + main_traffic + neo_traffic, data = delayed_df, na.action=na.exclude))$r.squared)
}
x(par = c(31.9594, 0.0001))
fit <- lm(data ~ Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist +
Ciri_Grande_flow_dist + main_traffic + neo_traffic, data = delayed_df)
summary(fit)
summary(lm(data ~ Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist +
Ciri_Grande_flow_dist + main_traffic + neo_traffic, data = delayed_df, na.action=na.exclude))
sumSqMin_salt <- function(par) {
return(summary(lm(data ~ par[1] + par[2] * min_dist_traffic + par[3] * min_dist_neo_traffic + par[4] * Gatun_flow_dist + par[5] * Cano_Quebrado_flow_dist + par[6] * Trinidad_flow_dist + par[7] * Ciri_Grande_flow_dist
, data = df))$r.squared)
}
x <- function(par) {
return(summary(lm(data ~ par[1] + par[2] * min_dist_traffic + par[3] * min_dist_neo_traffic + par[4] * Gatun_flow_dist + par[5] * Cano_Quebrado_flow_dist + par[6] * Trinidad_flow_dist + par[7] * Ciri_Grande_flow_dist
, data = df))$r.squared)
}
result <- optim(par = c(0, 1, 1, 1, 1, 1, 1), fn = x, data = df)
result
View(df)
x <- function(par) {
return(summary(lm(df$data ~ par[1] + par[2] * min_dist_traffic + par[3] * min_dist_neo_traffic + par[4] * Gatun_flow_dist + par[5] * Cano_Quebrado_flow_dist + par[6] * Trinidad_flow_dist + par[7] * Ciri_Grande_flow_dist
, data = df))$r.squared)
}
x(0, 1, 1, 1, 1, 1, 1)
x(c(0, 1, 1, 1, 1, 1, 1))
c(0, 1, 1, 1, 1, 1, 1)[1]
x <- function(par) {
return(summary(lm(df$data ~ par[1] + par[2] * min_dist_traffic + par[3] * min_dist_neo_traffic + par[4] * Gatun_flow_dist + par[5] * Cano_Quebrado_flow_dist + par[6] * Trinidad_flow_dist + par[7] * Ciri_Grande_flow_dist, data = df))$r.squared)
}
x(c(0, 1, 1, 1, 1, 1, 1))
x <- function(par) {
return(summary(lm(df$data ~ par[2] * min_dist_traffic + par[3] * min_dist_neo_traffic + par[4] * Gatun_flow_dist + par[5] * Cano_Quebrado_flow_dist + par[6] * Trinidad_flow_dist + par[7] * Ciri_Grande_flow_dist, data = df))$r.squared)
}
x <- function(par) {
return(summary(lm(df$data ~ par[2] * min_dist_traffic + par[3] * min_dist_neo_traffic + par[4] * Gatun_flow_dist + par[5] * Cano_Quebrado_flow_dist + par[6] * Trinidad_flow_dist + par[7] * Ciri_Grande_flow_dist, data = df))$r.squared)
}
x(c(0, 1, 1, 1, 1, 1, 1))
x <- function(par) {
return(summary(lm(df$data ~ par[1] + par[2] * min_dist_traffic + par[3] * min_dist_neo_traffic + par[4] * Gatun_flow_dist + par[5] * Cano_Quebrado_flow_dist + par[6] * Trinidad_flow_dist + par[7] * Ciri_Grande_flow_dist, data = df))$r.squared)
}
x(c(1, 1, 1, 1, 1, 1, 1))
df <- df[complete.cases(df), ]
View(df)
df <- df[complete.cases(df), ]
lm(df$data ~ par[1] + par[2] * min_dist_traffic + par[3] * min_dist_neo_traffic + par[4] * Gatun_flow_dist + par[5] * Cano_Quebrado_flow_dist + par[6] * Trinidad_flow_dist + par[7] * Ciri_Grande_flow_dist, data = df))
lm(df$data ~ par[1] + par[2] * min_dist_traffic + par[3] * min_dist_neo_traffic + par[4] * Gatun_flow_dist + par[5] * Cano_Quebrado_flow_dist + par[6] * Trinidad_flow_dist + par[7] * Ciri_Grande_flow_dist, data = df)
fit1 <- lm(data ~ Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist + Ciri_Grande_flow_dist + min_dist_traffic, data=df)
resid2 <- residuals(fit1,type="deviance")
resid2
fit1 <- update(fit1,.~.+ Lag(resid2,1),  na.action=na.omit)
install.packages('stats')
install.packages("stats")
library(stats)
library(stats)
fit1 <- update(fit1,.~.+ Lag(resid2,1),  na.action=na.omit)
fit1 <- update(fit1,.~.+ lag(resid2,1),  na.action=na.omit)
summary(fit1)
x <- function(par) {
return(summary(lm(df$data ~ par[1] + par[2] * min_dist_traffic + par[3] * min_dist_neo_traffic + par[4] * Gatun_flow_dist + par[5] * Cano_Quebrado_flow_dist + par[6] * Trinidad_flow_dist + par[7] * Ciri_Grande_flow_dist + lag(resid2,1), data = df))$r.squared)
}
x(c(1, 1, 1, 1, 1, 1, 1))
View(delayed_df)
df$date <- as.Date(df$date)
delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df <- subset(delayed_df, delayed_df$data != 15)
delayed_df <- subset(delayed_df, delayed_df$data != 4.11)
#outliers
delayed_df <- subset(delayed_df, delayed_df$site != 'TMH')
delayed_df <- write.csv(delayed_df, "delayed_df.csv")
getwd()
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
delayed_df <- df[,c(1:3, 8, 15:20)]
View(df)
delayed_df <- df[,c(1:3, 8, 15:20)]
df <- read.csv("all_data.csv")
df$date <- as.Date(df$date)
#a bunch of commands to get the lag via parameters and remaking the dataframe with appropriate lags
delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df <- subset(delayed_df, delayed_df$data != 15)
delayed_df <- subset(delayed_df, delayed_df$data != 4.11)
#outliers
delayed_df <- subset(delayed_df, delayed_df$site != 'TMH')
df <- read.table("all_data.csv")
dplyr::read_csv("all_data.csv")
df <- read.csv("all_data.csv", row.names = F)
df <- read.csv("all_data.csv", skip = 1, header = F)
df[-c(1)]
df <- read.csv("all_data.csv")
df[-c(1)]
df <- df[-c(1)]
View(df)
df <- write.csv(df,"all_data.csv")
df <- read.csv("all_data.csv")
df <- df[-c(1)]
df <- write.csv(df,"all_data.csv", row.names=FALSE)
df <- read.csv("all_data.csv")
df$date <- as.Date(df$date)
#a bunch of commands to get the lag via parameters and remaking the dataframe with appropriate lags
delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df <- subset(delayed_df, delayed_df$data != 15)
delayed_df <- subset(delayed_df, delayed_df$data != 4.11)
#outliers
delayed_df <- subset(delayed_df, delayed_df$site != 'TMH')
x<-function(par)
{
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA #removing dates before the beginning of salinity data collection
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
delayed_df[delayed_df == 0] <- NA
delayed_df <- delayed_df[complete.cases(delayed_df), ]
return(summary(lm(data ~ Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist + Ciri_Grande_flow_dist + main_traffic + neo_traffic, data = delayed_df, na.action=na.exclude))$r.squared)
}
x(par = c(31.9594, 0.0001))
o <- optim(par = c(31.9594, 0.0001),x)
df <- read.csv("all_data.csv")
df$date <- as.Date(df$date)
#a bunch of commands to get the lag via parameters and remaking the dataframe with appropriate lags
delayed_df <- df[,c(1:3, 8, 15:20)]
delayed_df <- subset(delayed_df, delayed_df$data != 15)
delayed_df <- subset(delayed_df, delayed_df$data != 4.11)
#outliers
delayed_df <- subset(delayed_df, delayed_df$site != 'TMH')
x<-function(par)
{
delayed_df$date <- as.Date(delayed_df$date)
delay_days <- round(par[1]*exp(par[2]*delayed_df$min_dist)) #delay in days per distance
effective_date <- delayed_df$date - delay_days
effective_date[which(effective_date<="2003-01-22")]= NA #removing dates before the beginning of salinity data collection
for (ii in 1:length(effective_date)){
if (!is.na(effective_date[ii])){
effective_date[ii] <- as.character(delayed_df$date[which.min(abs(effective_date[ii] - delayed_df$date))])
}
}
for (i in unique(delayed_df$site)){
delayed_df$main_traffic <-  delayed_df$min_dist_traffic[match(effective_date, delayed_df$date)]
delayed_df$neo_traffic <- delayed_df$min_dist_neo_traffic[match(effective_date, delayed_df$date)]
}
return(summary(lm(data ~ Gatun_flow_dist + Cano_Quebrado_flow_dist + Trinidad_flow_dist + Ciri_Grande_flow_dist + main_traffic + neo_traffic, data = delayed_df, na.action=na.exclude))$r.squared)
}
x(par = c(31.9594, 0.0001))
